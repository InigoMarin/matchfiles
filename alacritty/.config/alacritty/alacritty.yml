env:
    # TERM env customization.
    #
    # If this property is not set, alacritty will set it to xterm-256color.
    #
    # Note that some xterm terminfo databases don't declare support for italics.
    # You can verify this by checking for the presence of `smso` and `sitm` in
    # `infocmp xterm-256color`.
    TERM: xterm-256color

window:
    dynamic_title: true
    # Window dimensions (changes require restart)
    #
    # Specified in number of columns/lines, not pixels.
    # If both are `0`, this setting is ignored.
    #dimensions:
    #  columns: 0
    #  lines: 0

    # Window position (changes require restart)
    #
    # Specified in number of pixels.
    # If the position is not set, the window manager will handle the placement.
    #position:
    #  x: 0
    #  y: 0

    # Window padding (changes require restart)
    #
    # Blank space added around the window in pixels. This padding is scaled
    # by DPI and the specified value is always added at both opposing sides.
    padding:
        x: 2
        y: 2

    # Spread additional padding evenly around the terminal content.
    dynamic_padding: false

    # Window title
    title: Alacritty

    # Window class (Linux/BSD only):
    class:
        # Application instance name
        instance: Alacritty
        # General application class
        general: Alacritty

    # GTK theme variant (Linux/BSD only)
    #
    # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
    # Set this to `None` to use the default theme variant.
    gtk_theme_variant: None

scrolling:
    # Maximum number of lines in the scrollback buffer.
    # Specifying '0' will disable scrolling.
    history: 400

    # Number of lines the viewport will move for every line scrolled when
    # scrollback is enabled (history > 0).
    multiplier: 1

# Font configuration
font:
    normal:
        family:
            JetBrains Mono
            #family: mono
        style: Medium
    #bold:
    #family: JetBrains Mono
    #style:

    # Italic font face
    #italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Italic

    # Bold italic font face
    #bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Bold Italic

    # Point size
    size: 10

    # Offset is the extra space around each character. `offset.y` can be thought of
    # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
    offset:
        x: -1
        y: -1

    # Glyph offset determines the locations of the glyphs within their cells with
    # the default being at the bottom. Increasing `x` moves the glyph to the right,
    # increasing `y` moves the glyph upwards.
    glyph_offset:
        x: 0
        y: 0

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: false

# Colors (Gruvbox Material Dark Medium)

colors:
    primary:
        background: '0x282828'
        foreground: '0xdfbf8e'

    normal:
        black: '0x665c54'
        red: '0xea6962'
        green: '0xa9b665'
        yellow: '0xe78a4e'
        blue: '0x7daea3'
        magenta: '0xd3869b'
        cyan: '0x89b482'
        white: '0xdfbf8e'

    bright:
        black: '0x928374'
        red: '0xea6962'
        green: '0xa9b665'
        yellow: '0xe3a84e'
        blue: '0x7daea3'
        magenta: '0xd3869b'
        cyan: '0x89b482'
        white: '0xdfbf8e'

        # Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
bell:
    animation: EaseOutExpo
    duration: 0
    color: '#ffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.

selection:
    semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>\t"

    # When set to `true`, selected text will be copied to the primary clipboard.
    save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.

cursor:
    style: Block 

    # If this is `true`, the cursor will be rendered as a hollow box when the
    # window is not focused.
    unfocused_hollow: true
    vi_mode_style: Block

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
working_directory: None

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

mouse:
    # Click settings
    #
    # The `double_click` and `triple_click` settings control the time
    # alacritty should wait for accepting multiple clicks as one double
    # or triple click.
    double_click: { threshold: 300 }
    triple_click: { threshold: 300 }

    # If this is `true`, the cursor is temporarily hidden when typing.
    #hide_when_typing: true


# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty captures the mouse, the
# `Shift` modifier is automatically added as a requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
mouse_bindings:
    - { mouse: Middle, action: Copy }
